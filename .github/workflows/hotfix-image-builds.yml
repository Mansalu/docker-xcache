name: Build XCache images based off of XRootD hotfix tags
on:
  # TODO: Change to every 5 minutes once we filter out already-built tags
  schedule:
    - cron: '5 * * * *'

jobs:
  xrootd-rpm-build:
    name: Find XRootD hotfix tags and build RPMs
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.hotfix-tags.outputs.tags }}
    steps:
      # TODO: move this step to 'base-image-build' when our RPM
      # building actions are external to this repo
      - name: Check out docker-xcache
        uses: actions/checkout@v2
        with:
          path: docker-xcache
      - name: Check out XRootD
        uses: actions/checkout@v2
        with:
          repository: brianhlin/xrootd
          path: xrootd
          fetch-depth: 0
      - name: Find hotfix tags
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        id: hotfix-tags
        run: ../docker-xcache/.github/find-hotfix-tags.sh
        working-directory: ./xrootd
      - name: Checkout hotfix
        # skip if no hotfix tags are found
        if: steps.hotfix-tags.outputs.tags != 0
        run: git checkout ${{ steps.hotfix-tags.outputs.tags }}
        working-directory: ./xrootd
        # TODO: Write an osg-build action that can build an RPM from an arbitrary Git repository
  #     - name: Build XRootD RPMs
  #       id: build-rpms
  #       uses: ./docker-xcache/.github/actions/osg-build
  #     - name: Upload RPM artifacts for subsequent jobs (https://github.com/actions/upload-artifact)
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: xrootd-rpms
  #         path: path/to/artifacts/*.rpm
  base-image-build:
    name: Build xcache base image
    # skip if no hotfix tags are found
    if: needs.xrootd-rpm-build.outputs.tags != 0
    needs: xrootd-rpm-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out docker-xcache
        uses: actions/checkout@v2
      # TODO: Modify the Dockerfile so that it can build from local RPMs
      - name: Build XCache base image
        uses: docker/build-push-action@v1
        with:
          repository: brianhlin/xcache
          path: ./xcache
          push: false
          tags: ${{ needs.xrootd-rpm-build.outputs.tags }}
      - name: Save XCache base image
        run: docker save --output /tmp/xcache.tar brianhlin/xcache:${{ needs.xrootd-rpm-build.outputs.tags }}
      - name: Upload XCache base image artifact
        uses: actions/upload-artifact@v2
        with:
          name: xcache-image
          path: /tmp/xcache.tar
  xcache-image-builds:
    name: Build ${{ matrix.image }} images
    strategy:
      matrix:
        image: [atlas-xcache, cms-xcache, stash-cache, stash-origin]
    # skip if no hotfix tags are found
    if: needs.xrootd-rpm-build.outputs.tags != 0
    needs:
      - xrootd-rpm-build
      - base-image-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out docker-xcache
        uses: actions/checkout@v2
      - name: Download XCache base image artifact
        uses: actions/download-artifact@v2
        with:
          name: xcache-image
      - name: Load XCache base image
        run: docker load -i xcache.tar
      - name: Replace FROM line in Dockerfile
        working-directory: ${{ matrix.image }}
        run: sed -i "s|FROM opensciencegrid/xcache:fresh|FROM brianhlin/xcache:${{ needs.xrootd-rpm-build.outputs.tags }}|" Dockerfile
      - name: Build ${{ matrix.image}} image
        uses: docker/build-push-action@v1
        with:
          repository: brianhlin/${{ matrix.image }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./${{ matrix.image }}
          tags: ${{ needs.xrootd-rpm-build.outputs.tags }}
    # TODO: Add test jobs or steps here and sandwich them between
    # separated image build and push. Also, push XCache base image.

name: Build XCache images based off of XRootD hotfix tags
on:
  # TODO: Change to every 5 minutes once we filter out already-built tags
  schedule:
    - cron: '30 * * * *'

jobs:
  xrootd-rpm-build:
    name: Find XRootD hotfix tags and build RPMs
    runs-on: ubuntu-latest
    outputs:
      hotfix-tag: ${{ steps.hotfix-tags.outputs.tag }}
    steps:
      # TODO: move this step to 'base-image-build' when our RPM
      # building actions are external to this repo
      - name: Check out docker-xcache
        uses: actions/checkout@v2
        with:
          path: docker-xcache
      - name: Check out XRootD
        uses: actions/checkout@v2
        with:
          repository: brianhlin/xrootd
          path: xrootd
          fetch-depth: 0
      - name: Find hotfix tags
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        id: hotfix-tags
        run: ../docker-xcache/.github/find-hotfix-tags.sh
        working-directory: ./xrootd
      - name: Prepare hotfix sources
        if: steps.hotfix-tags.outputs.tag != 0
        run: |
            ./docker-xcache/.github/prep-hotfix-sources.sh \
              ${{ steps.hotfix-tags.outputs.tag }} \
              ./xrootd \
              ./xrootd/packaging/rhel/xrootd.spec.in
      - if: steps.hotfix-tags.outputs.tag != 0
        run: |
            docker run \
              -v $(pwd)/xrootd/:/xrootd \
              -v $(pwd)/_build_dir:/u/_build_dir \
              --privileged \
              opensciencegrid/osg-build:el7 \
              osg-build --verbose mock --mock-config-from-koji=osg-upcoming-el7-build _build_dir
  base-image-build:
    name: Build xcache base image
    # skip if no hotfix tags are found
    if: needs.xrootd-rpm-build.outputs.hotfix-tag != 0
    needs: xrootd-rpm-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out docker-xcache
        uses: actions/checkout@v2
      # TODO: Modify the Dockerfile so that it can build from local RPMs
      - name: Build XCache base image
        uses: docker/build-push-action@v1
        with:
          repository: brianhlin/xcache
          path: ./xcache
          tags: ${{ needs.xrootd-rpm-build.outputs.tag }}
  xcache-image-builds:
    name: Build ${{ matrix.image }} images
    strategy:
      matrix:
        image: [atlas-xcache, cms-xcache, stash-cache, stash-origin]
    # skip if no hotfix tags are found
    if: needs.xrootd-rpm-build.outputs.hotfix-tag != 0
    needs:
      - base-image-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out docker-xcache
        uses: actions/checkout@v2
      - name: Replace FROM line in Dockerfile
        working-directory: ./docker-xcache/${{ matrix.image }}
        run: sed -i "s|FROM opensciencegrid/xcache:fresh|FROM brianhlin/xcache:${{ needs.xrootd-rpm-build.outputs.tag }}|" Dockerfile
      - name: Build ${{ matrix.image}} image
        uses: docker/build-push-action@v1
        with:
          repository: brianhlin/${{ matrix.image }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./${{ matrix.image }}
          tags: ${{ needs.xrootd-rpm-build.outputs.tag }}
    # TODO: Add test jobs or steps here and sandwich them between
    # separated image build and push. Also, push XCache base image.

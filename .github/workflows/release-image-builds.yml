name: Build XCache images from OSG Yum repositories
on:
  push:
    branches:
      - SOFTWARE-4181.github-docker-repo
  # TODO: Change to every 5 minutes once we filter out already-built tags
  # schedule:
  #   - cron: '34 2 * * TUE'

jobs:
  base-image-build:
    name: Build initial xcache:${{ matrix.yum_repo_prefix }}fresh base image
    strategy:
      matrix:
        yum_repo_prefix: ["upcoming-", ""]
    runs-on: ubuntu-latest
    steps:
      - name: Check out docker-xcache
        uses: actions/checkout@v2
      - name: Build XCache base image
        uses: docker/build-push-action@v1
        with:
          repository: ${{ github.repository }}/xcache
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          path: ./xcache
          build_args: BASE_YUM_REPO=osg-${{ matrix.yum_repo_prefix }}minefield
          tags: ${{ matrix.yum_repo_prefix }}minefield
  xcache-image-builds:
    name: Build ${{ matrix.image }}:${{ matrix.yum_repo_prefix}}fresh image
    strategy:
      matrix:
        image: [atlas-xcache, cms-xcache, stash-cache, stash-origin]
        yum_repo_prefix: ["upcoming-", ""]
    needs: base-image-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out docker-xcache
        uses: actions/checkout@v2
      - name: Replace FROM line in Dockerfile
        working-directory: ${{ matrix.image }}
        run: |
          sed -i \
            "s|FROM opensciencegrid/xcache:fresh|FROM docker.pkg.github.com/$GITHUB_REPOSITORY/xcache:${{ matrix.yum_repo_prefix}}minefield|" \
            Dockerfile
      - name: Build ${{ matrix.image }}:${{ matrix.yum_repo_prefix }}fresh image
        uses: docker/build-push-action@v1
        with:
          repository: ${{ github.repository }}/${{ matrix.image }}
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ matrix.image }}
          build_args: BASE_YUM_REPO=osg-${{ matrix.yum_repo_prefix }}minefield
          tags: ${{ matrix.yum_repo_prefix }}minefield
  test-stash-cache:
    name: Test Stash Cache and Origin (${{ matrix.yum_repo_prefix }}fresh)
    strategy:
      matrix:
        yum_repo_prefix: ["upcoming-", ""]
    needs: xcache-image-builds
    runs-on: ubuntu-latest
    steps:
      - name: Check out docker-xcache
        uses: actions/checkout@v2
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - run: ./tests/test_stashcache_origin.sh "docker.pkg.github.com/$GITHUB_REPOSITORY/stash-origin:${{ matrix.yum_repo_prefix }}minefield"
      - run: ./tests/test_stashcache.sh "docker.pkg.github.com/$GITHUB_REPOSITORY/stash-cache:${{ matrix.yum_repo_prefix }}minefield"
  get-timestamp:
    name: Get timestamp for tagging images
    needs: test-stash-cache
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp-tag.outputs.timestamp }}
    steps:
      - name: Get timestamp for timestamp tags
        id: timestamp-tag
        run: echo "::set-output name=timestamp::$(date +%Y%m%d-%H%M)"
  push-images:
    name: Push ${{ matrix.image }}:${{ matrix.yum_repo_prefix }}fresh image
    strategy:
      matrix:
        image: [atlas-xcache, cms-xcache, stash-cache, stash-origin, xcache]
        yum_repo_prefix: ["upcoming-", ""]
    needs: get-timestamp
    runs-on: ubuntu-latest
    steps:
      - name: Check out docker-xcache
        uses: actions/checkout@v2
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - name: Build ${{ matrix.image}} image
        uses: docker/build-push-action@v1
        with:
          repository: brianhlin/${{ matrix.image }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./.github/Dockerfile.dummy
          build_args: IMAGE_NAME=${{ matrix.yum_repo_prefix }}, TAG_NAME=${{ matrix.yum_repo_prefix }}minefield
          tags: ${{ matrix.yum_repo_prefix }}fresh, ${{ matrix.yum_repo_prefix }}${{ needs.get-timestamp.outputs.timestamp }}
